<?xml version="1.0" encoding="UTF-8"?>

		<!--TRACE < DEBUG < INFO < WARN < ERROR < FATAL-->

<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。scanPeriod:设置监测配置文件是否有修改的时间间隔， 
	如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟 ;debug:当此属性设置为true时，将打印出 
	logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="30 seconds">
<!--每个logger都关联到logger上下文，默认上下文名称为“default”。但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。
	一旦设置，不能修改-->
<!-- 	<contextName>maven_log</contextName> -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M\(%line\) # %msg%n</pattern>
		</encoder>
	</appender>
	<Encoding>UTF-8</Encoding> 
	<appender name="logFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${catalina.home}/logs/tools.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
<!-- 		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy"> -->
			<fileNamePattern>${catalina.home}/logs/tools.%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
<!-- 		    <MinIndex>1</MinIndex> -->
<!-- 		    <MaxIndex>3</MaxIndex> -->
			<maxHistory>2</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">  
		        <maxFileSize>50MB</maxFileSize>
      		</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
<!-- 		<layout class="ch.qos.logback.classic.PatternLayout"> -->
<!-- 			<Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M\(%line\) # %msg%n</Pattern> -->
<!-- 		</layout> -->
		<encoder>
      		<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M\(%line\) # %msg%n</pattern>
    	</encoder>
	</appender>

	<logger name="org.mybatis.spring" level="DEBUG" />
	<logger name="org.apache.ibatis" level="TRACE" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.ResultSet" level="DEBUG" />

	<logger name="org.springframework" level="DEBUG" />
	<logger name="org.springframework.transaction" level="DEBUG" />

	<!--打印sql-->
	<logger name="com.achilles.wild.server.dao" level="DEBUG"/>


	<root level="DEBUG">
		<appender-ref ref="console" />
<!--		<appender-ref ref="logFile" />-->
	</root>
</configuration>